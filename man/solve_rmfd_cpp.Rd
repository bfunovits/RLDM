% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{solve_rmfd_cpp}
\alias{solve_rmfd_cpp}
\title{Simulating Output from an RMFD Model (or obtain residuals)}
\usage{
solve_rmfd_cpp(poly_inv, poly_fwd, data_in, data_out, t0)
}
\arguments{
\item{poly_inv}{Matrix of dimension \eqn{(n \times n p)}{(n x n p)},
representing a square matrix polynomial \eqn{c(z)} with \eqn{c_0}{c[0]} equal to the identity matrix (and therefore not stored).
The coefficients need to be in \strong{reverse} direction, i.e. \eqn{(c_p, ... , c_1)}{(c[p], ... , c[1])},
where \eqn{p} denotes the degree of \eqn{c(z)}.}

\item{poly_fwd}{Matrix of dimensions \eqn{(m \times n(q+1))}{(m x n(q+1))},
representing a (possibly tall) matrix polynomial \eqn{d(z)} of dimension
\eqn{(m \times n)}{(m x n)}, where \eqn{m \geq n}{m \ge n}.
The coefficient are stored "as usual" and including \eqn{d_0}{d[0]}, i.e. \eqn{(d_0, d_1, ... , d_{q-1}, d_{q})}{(d[0], d[1], ... , d[q-1], d[q])},
where \eqn{q} denotes the degree of \eqn{d(z)}.}

\item{data_in}{Matrix of dimension \eqn{(n \times n_obs)}{(n x n_obs)}, i.e. \eqn{(u_1, ..., u_T)}{(u[1], ..., u[T])}.
Inputs to the RMFD system.}

\item{data_out}{Matrix of dimension \eqn{(m \times n_obs)}{(m x n_obs)}, i.e. \eqn{(y_1, ..., y_T)}{(y[1], ..., t[T])}.
Outputs of the RMFD system. Initially zero and will be \strong{overwritten}.}

\item{t0}{Integer. Time index from which we should start calculating a solution.
Usually equal to 1.}
}
\description{
This RcppArmadillo function calculates for given inputs \code{data_in}
of dimension \eqn{(n \times nobs)}{(n x nobs)},  where \eqn{nobs} is the sample size,
the outputs of dimension \eqn{m}.
Note that data matrices are "transposed" in the sense that every column
corresponds to one observation because of memory management.
\code{data_out} is thus of dimension \eqn{(m x nobs)}.
This function is intended for internal use and thus arguments are not checked.
}
