# Generated by roxygen2: do not edit by hand

S3method(as.stspmod,armamod)
S3method(autocov,armamod)
S3method(autocov,autocov)
S3method(autocov,default)
S3method(autocov,stspmod)
S3method(freqresp,armamod)
S3method(freqresp,impresp)
S3method(freqresp,stspmod)
S3method(impresp,armamod)
S3method(impresp,impresp)
S3method(impresp,rmfdmod)
S3method(impresp,stspmod)
S3method(ll,armamod)
S3method(ll,stspmod)
S3method(plot,autocov)
S3method(plot,fevardec)
S3method(plot,freqresp)
S3method(plot,impresp)
S3method(plot,spectrald)
S3method(poles,armamod)
S3method(poles,rmfdmod)
S3method(poles,stspmod)
S3method(predict,armamod)
S3method(predict,stspmod)
S3method(print,armamod)
S3method(print,autocov)
S3method(print,fevardec)
S3method(print,freqresp)
S3method(print,impresp)
S3method(print,rmfdmod)
S3method(print,spectrald)
S3method(print,stspmod)
S3method(sim,armamod)
S3method(sim,stspmod)
S3method(solve_de,lmfd)
S3method(solve_de,rmfd)
S3method(solve_de,stsp)
S3method(solve_inverse_de,lmfd)
S3method(solve_inverse_de,rmfd)
S3method(solve_inverse_de,stsp)
S3method(spectrald,armamod)
S3method(spectrald,autocov)
S3method(spectrald,default)
S3method(spectrald,impresp)
S3method(spectrald,stspmod)
S3method(str,armamod)
S3method(str,autocov)
S3method(str,fevardec)
S3method(str,freqresp)
S3method(str,impresp)
S3method(str,spectrald)
S3method(str,stspmod)
S3method(zeroes,armamod)
S3method(zeroes,rmfdmod)
S3method(zeroes,stspmod)
export(KL_divergence)
export(armamod)
export(as.stspmod)
export(autocov)
export(cbind_templates)
export(cll_theta_ARMA_cpp)
export(compare_estimates)
export(dft_3D)
export(est_ML)
export(est_ar)
export(est_ar_dlw)
export(est_ar_ols)
export(est_ar_yw)
export(est_arma_hrk)
export(est_arma_hrk3)
export(est_stsp_aoki)
export(est_stsp_cca)
export(est_stsp_cca_sample)
export(est_stsp_ss)
export(estorder_IVC)
export(estorder_MOE)
export(estorder_SVC)
export(estorder_max)
export(estorder_rkH)
export(evaluate_prediction)
export(extract_theta)
export(fbsolve_STSP_cpp)
export(fevardec)
export(fill_template)
export(freqresp)
export(impresp)
export(innovation_form)
export(is.template)
export(kf)
export(kf2_cpp)
export(kf_cpp)
export(ll)
export(ll_FUN)
export(ll_kf)
export(ll_kf2_cpp)
export(ll_kf_cpp)
export(ll_theta)
export(model2template)
export(outputs_ARMA_cpp)
export(outputs_STSP_cpp)
export(plot_prediction)
export(pm_test)
export(r_model)
export(residuals_ARMA_cpp)
export(residuals_STSP_cpp)
export(riccati)
export(rmfdmod)
export(sim)
export(solve_ARMA_R)
export(solve_RMFD_R)
export(solve_de)
export(solve_inverse_RMFD_R)
export(solve_inverse_de)
export(solve_rmfd_cpp)
export(spectrald)
export(stspmod)
export(test_armamod)
export(test_stspmod)
export(tmpl_DDLC)
export(tmpl_GRAM)
export(tmpl_arma_echelon)
export(tmpl_arma_pq)
export(tmpl_cycle)
export(tmpl_llm)
export(tmpl_lltm)
export(tmpl_rmfd_echelon)
export(tmpl_rmfd_pq)
export(tmpl_season)
export(tmpl_sigma_L)
export(tmpl_stsp_ar)
export(tmpl_stsp_echelon)
export(tmpl_stsp_full)
export(toepl_fwd)
export(toepl_inv)
exportPattern("^[[:alpha:]]+")
import(rationalmatrices)
importFrom(Rcpp,evalCpp)
importFrom(Rcpp,sourceCpp)
importFrom(Rdpack,reprompt)
useDynLib(RLDM, .registration = TRUE)
